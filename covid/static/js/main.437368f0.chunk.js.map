{"version":3,"sources":["utils/constants.js","api/getFetch.js","components/UI/Select/Select.jsx","components/CountriesList/components/CountriesSelection.jsx","components/UI/Button/Button.jsx","components/UI/Card/Card.jsx","components/UI/Error/Error.jsx","components/UI/Input/Input.jsx","components/UI/Loader/Loader.jsx","components/CountriesList/CountriesList.jsx","components/CountryInfo/CountryInfo.jsx","components/Statistics/Statistics.jsx","components/InputMenu/InputMenu.jsx","utils/handleDate.js","components/App.js","index.js"],"names":["DAY","start_period","end_period","WEEK","MONTH","INIT_WARNING_START","start","labelForStart","INIT_WARNING_END","end","labelForEnd","getFetch","url","a","Error","fetch","response","ok","status","json","result","Select","children","handleOnChange","name","id","autoFocus","defaultValue","className","onChange","e","target","value","disabled","hidden","CountriesSelection","data","setCountry","map","item","index","Slug","Country","Button","callback","label","onClick","Card","date","period","active","confirmed","deaths","Input","type","currentTarget","Loader","style","width","marginTop","role","CountriesList","useState","items","setItems","useEffect","fetchData","countries","length","form","CountryInfo","country","countryData","setCountryData","setPeriod","setShowInputMenu","setShowStatistics","loading","setLoading","request","lastData","Date","slice","periodDays","Active","Confirmed","Deaths","setStandardPeriod","href","Statistics","calculate","keyWord","Math","abs","InputMenu","maxPeriod","inpStart","setInpStart","inpEnd","setInpEnd","warningStart","setWarningStart","warningEnd","setWarningEnd","endNumb","startNumb","isErrorEnd","isErrorStart","today","transformInpDateToNumber","inputDate","days","ceil","checkForError","numbDays","printOrHideError","isError","handleDate","App","showInputMenu","showStatistics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAEaA,EAAM,CACjBC,aAAc,EACdC,WAAY,GAEDC,EAAO,CAClBF,aAAc,EACdC,WAAY,GAEDE,EAAQ,CACnBH,aAAc,EACdC,WAAY,IAGDG,EAAqB,CACjCC,OAAO,EACPC,cAAe,uBAEHC,EAAmB,CAC/BC,KAAK,EACLC,YAAa,qBCnBRC,EAAQ,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACVD,EADU,sBACC,IAAIE,MAAM,6BADX,uBAEQC,MDJG,8BCIkBH,GAF7B,WAETI,EAFS,QAIDC,GAJC,sBAKP,IAAIH,MAAJ,qCAAwCE,EAASE,SAL1C,wBAOQF,EAASG,OAPjB,eAOPC,EAPO,yBAQNA,GARM,4CAAH,sDAYCT,I,eCOAU,EAlBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC1B,OACE,yBACEC,KAAK,YACLC,GAAG,gBACHC,WAAS,EACTC,aAAa,UACbC,UAAU,cACV,aAAW,yBACXC,SAAU,SAACC,GAAD,OAAOP,EAAeO,EAAEC,OAAOC,QAP3C,UASE,wBAAQA,MAAM,UAAUC,UAAQ,EAACC,QAAM,EAAvC,+BAGCZ,MCAQa,EAdY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAClC,OACE,mCACE,cAAC,EAAD,CAAQd,eAAgBc,EAAxB,SACGD,EAAKE,KAAI,SAACC,EAAMC,GAAP,OACR,yBAAwBR,MAAOO,EAAKE,KAApC,UACGD,EAAQ,EADX,KACgBD,EAAKG,UADRH,EAAKE,cCUbE,G,MAfA,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAEzB,OACE,wBACEjB,UAAU,SACVkB,QAAS,WACFF,GACLA,KAJJ,SAOGC,MCMQE,EAnBF,SAAC,GAOP,IANLvB,EAMI,EANJA,KACAwB,EAKI,EALJA,KACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACAC,EACI,EADJA,OAEA,OACE,gCACE,2CAAc5B,KACd,sDAAyBwB,KACzB,sDAAyBC,KACzB,oDAAuBC,KACvB,oDAAuBC,KACvB,oDAAuBC,SCJdtC,G,MARD,SAAC,GAAe,IAAb+B,EAAY,EAAZA,MACf,OACE,oBAAIjB,UAAW,UAAf,SACGiB,MCSQQ,EAbD,SAAC,GAAgC,IAA9BR,EAA6B,EAA7BA,MAAOb,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SAC7B,OACE,uBACEnB,GAAIoB,EACJb,MAAOA,EACPsB,KAAK,OACLzB,SAAU,SAACC,GACJc,GACLA,EAASd,EAAEyB,cAAcvB,WCFlBwB,EARA,WACb,OACE,sBAAK5B,UAAU,gCAAgC6B,MAAO,CAAEC,MAAO,OAAQC,UAAW,QAAlF,UACE,qBAAK/B,UAAU,iBAAiBgC,KAAK,WACrC,kDC0BSC,EAzBO,SAAC,GAAoB,IAAlBxB,EAAiB,EAAjBA,WACvB,EAA0ByB,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAArD,EAAA,sEACQF,EAAS,aADjB,OACVwD,EADU,OAEhBH,EAASG,GAFO,2CAAH,qDAIfD,MACC,IAIAH,EAAMK,OACP,iCACE,8BACE,uBAAM3C,GAAG,OAAT,UACE,uBAAO4C,KAAK,kBACZ,cAAC,EAAD,CAAoBjC,KAAM2B,EAAO1B,WAAYA,WALnC,cAAC,EAAD,KCgELiC,G,MA5EK,SAAC,GAOd,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,kBAEA,EAA8Bd,oBAAS,GAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KAaA,GAXAb,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAArD,EAAA,sEACMF,EAAS,WAAD,OAAY4D,IAD1B,OACVQ,EADU,OAEhBN,EAAeM,GACfD,GAAW,GAHK,2CAAH,qDAKVP,EAAQH,SACbU,GAAW,GACXZ,OACC,CAACK,IAEAM,EACF,OAAO,cAAC,EAAD,IAET,IAAKL,EAAYJ,OACf,OACE,cAAC,EAAD,CACEvB,MAAO,+CAGb,IAAMmC,EAAWR,EAAYA,EAAYJ,OAAS,GAC5C5C,EAAOwD,EAAStC,QAChBM,EAAOgC,EAASC,KAAKC,MAAM,EAAG,IAC9BC,EAAaX,EAAYJ,OACzBlB,EAAS8B,EAASI,OAClBjC,EAAY6B,EAASK,UACrBjC,EAAS4B,EAASM,OAElBC,EAAoB,SAACtC,GACzByB,EAAUzB,GACV2B,GAAkB,IAEpB,OACE,sBAAKhD,UAAU,cAAf,UACE,cAAC,EAAD,CACEJ,KAAMA,EACNwB,KAAMA,EACNC,OAAQkC,EACRjC,OAAQA,EACRC,UAAWA,EACXC,OAAQA,IAEV,oBAAGoC,KAAK,kBAAR,UACE,cAAC,EAAD,CACE5C,SAAU,kBAAM2C,EAAkBvF,IAClC6C,MAAO,iBAET,cAAC,EAAD,CACED,SAAU,kBAAM2C,EAAkBpF,IAClC0C,MAAO,kBAET,cAAC,EAAD,CACED,SAAU,kBAAM2C,EAAkBnF,IAClCyC,MAAO,sBAGX,mBAAG2C,KAAK,aAAR,SACE,cAAC,EAAD,CACE5C,SAAU,kBAAM+B,GAAiB,IACjC9B,MAAO,6BC5BF4C,G,MA1CI,SAAC,GAIb,IAHLxC,EAGI,EAHJA,OACAuB,EAEI,EAFJA,YACAI,EACI,EADJA,kBAEQ3E,EAA6BgD,EAA7BhD,aAAcC,EAAe+C,EAAf/C,WAEtB,GAAIsE,EAAYJ,OAAQ,CACtB,IAAMsB,EAAY,SAACC,GACjB,OAAOC,KAAKC,IACVrB,EAAYA,EAAYJ,OAASnE,EAAe,GAC9C0F,GAEAnB,EAAYA,EAAYJ,OAASlE,EAAa,GAC5CyF,KAKFnE,EAAOgD,EAAY,GAAG9B,QACtByC,EAAaS,KAAKC,IAAI5F,EAAeC,GACrCgD,EAASwC,EAAU,UACnBvC,EAAYuC,EAAU,aACtBtC,EAASsC,EAAU,UAEzB,OACE,sBAAK9D,UAAU,iBAAiBH,GAAG,iBAAnC,UACE,cAAC,EAAD,CACED,KAAMA,EACNyB,OAAQkC,EACRjC,OAAQA,EACRC,UAAWA,EACXC,OAAQA,IAEV,cAAC,EAAD,CACER,SAAU,kBAAMgC,GAAkB,IAClC/B,MAAO,4B,iBC+BFiD,EA/DG,SAAC,GAMZ,IALLC,EAKI,EALJA,UACA9C,EAII,EAJJA,OACAyB,EAGI,EAHJA,UACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,kBAEA,EAAgCd,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KACA,EAA4BnC,mBAAS,IAArC,mBAAOoC,EAAP,KAAeC,EAAf,KAEA,EAAwCrC,mBACtCzD,GADF,mBAAO+F,EAAP,KAAqBC,EAArB,KAGA,EAAoCvC,mBAClCtD,GADF,mBAAO8F,EAAP,KAAmBC,EAAnB,KAkBA,OAdAtC,qBAAU,YC1BG,SACb+B,EACAE,EACAjD,EACAyB,EACA0B,EACAC,EACAC,EACAC,EACA3B,GAEA,IACI4B,EAASC,EAAWC,EAAYC,EAD9BC,EAAQ,IAAI3B,KAGZ4B,EAA2B,SAACC,GAChC,IAAMC,EAAO,IAAI9B,KAAK6B,GACtB,OAAOlB,KAAKoB,MAAMJ,EAAQG,GAAQ,QAG9BE,EAAgB,SAACC,GACrB,OAAOA,EAAW,GAAKA,EAAWjE,EAAOmB,QAKrC+C,EAAmB,SAACC,EAASvE,GAEjC,GAAIuE,EAGF,OAFAxC,GAAkB,GAEV/B,GACN,IAAK,QACHwD,EAAgB,2BACXD,GADU,IAEb9F,OAAO,KAET,MACF,IAAK,MACHiG,EAAc,2BACTD,GADQ,IAEX7F,KAAK,KAEP,MACF,QACE,OAIN,IAAK2G,EACH,OAAQvE,GACN,IAAK,QACHwD,EAAgB,2BACXD,GADU,IAEb9F,OAAO,KAET,MACF,IAAK,MACHiG,EAAc,2BACTD,GADQ,IAEX7F,KAAK,KAEP,MACF,QACE,SAKJuF,EAAS5B,QAGX+C,EADAR,EAAeM,EADfR,EAAYI,EAAyBb,IAEN,SAE7BE,EAAO9B,QAGT+C,EADAT,EAAaO,EADbT,EAAUK,EAAyBX,IAEN,QAGZ,IAAfQ,IAAyC,IAAjBC,IAC1BjC,EAAU,CACRzE,aAAcwG,EACdvG,WAAYsG,IAEd5B,GAAkB,IDzDlByC,CACErB,EACAE,EACAjD,EACAyB,EACA0B,EACAC,EACAC,EACAC,EACA3B,KAED,CAACoB,EAAUE,IAGZ,sBAAKtE,UAAU,YAAYH,GAAG,YAA9B,UACE,8DAC+BsE,EAD/B,4BAIA,uBAAOvE,KAAK,eAAZ,iCACA,cAAC,EAAD,CACEqB,MAAO,eACPb,MAAOgE,EACPpD,SAAUqD,IAGZ,uBAAOzE,KAAK,aAAZ,+BACA,cAAC,EAAD,CACEqB,MAAO,aACPb,MAAOkE,EACPtD,SAAUuD,IAEZ,cAAC,EAAD,CACEtD,MAAO,oBACPD,SAAU,kBAAM+B,GAAiB,MAElCyB,EAAa9F,OACZ,cAAC,EAAD,CAAOuC,MAAOuD,EAAa7F,gBAE5B+F,EAAW7F,KACV,cAAC,EAAD,CAAOoC,MAAOyD,EAAW5F,kBEhBlB4G,G,YA3CH,WACV,MAA8BxD,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBlC,EAAhB,KACA,EAAsCyB,mBAAS,IAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAA4BX,mBAAS,CACnC7D,aAAc,EACdC,WAAY,IAFd,mBAAO+C,EAAP,KAAeyB,EAAf,KAKA,EAA0CZ,oBAAS,GAAnD,mBAAOyD,EAAP,KAAsB5C,EAAtB,KACA,EAA4Cb,oBAAS,GAArD,mBAAO0D,EAAP,KAAuB5C,EAAvB,KAEA,OACE,qCACE,cAAC,EAAD,CAAevC,WAAYA,IAC3B,uBAAMT,UAAU,UAAhB,UACG2F,GAAiB,cAAC,EAAD,CACtBxB,UAAWvB,EAAYJ,OACnBnB,OAAQA,EACNyB,UAAWA,EACXC,iBAAkBA,EAClBC,kBAAmBA,MAElBL,EAAQH,QACT,cAAC,EAAD,CACAG,QAASA,EACPC,YAAaA,EACbC,eAAgBA,EAChBC,UAAWA,EACXC,iBAAkBA,EAClBC,kBAAmBA,IAGtB4C,GAAkB,cAAC,EAAD,CACjBvE,OAAQA,EACRuB,YAAaA,EACbI,kBAAmBA,YCvC7B6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.437368f0.chunk.js","sourcesContent":["export const BASE_API_URL = \"https://api.covid19api.com/\";\r\n\r\nexport const DAY = {\r\n  start_period: 1,\r\n  end_period: 2,\r\n};\r\nexport const WEEK = {\r\n  start_period: 1,\r\n  end_period: 8,\r\n};\r\nexport const MONTH = {\r\n  start_period: 1,\r\n  end_period: 31,\r\n};\r\n\r\nexport const INIT_WARNING_START = {\r\n\tstart: false,\r\n\tlabelForStart: \"Wrong PERIOD START.\",\r\n}\r\nexport const INIT_WARNING_END = {\r\n\tend: false,\r\n\tlabelForEnd: \"Wrong PERIOD END.\"\r\n}","import { BASE_API_URL } from \"../utils/constants\";\r\n\r\nconst getFetch = async (url) => {\r\n  if (!url) throw new Error(\"Please add url to request\");\r\n  const response = await fetch(BASE_API_URL + url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Response status fetch is : ${response.status}`);\r\n  } else {\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n};\r\n\r\nexport default getFetch;\r\n","import React from \"react\";\r\nimport \"./Select.css\";\r\n\r\nconst Select = ({ children, handleOnChange }) => {\r\n  return (\r\n    <select\r\n      name=\"countries\"\r\n      id=\"countriesList\"\r\n      autoFocus\r\n      defaultValue=\"default\"\r\n      className=\"form-select\"\r\n      aria-label=\"Default select example\"\r\n      onChange={(e) => handleOnChange(e.target.value)}\r\n    >\r\n      <option value=\"default\" disabled hidden>\r\n        Choose a country:\r\n      </option>\r\n      {children}\r\n    </select>\r\n  );\r\n};\r\nexport default Select;\r\n","import React from \"react\";\r\nimport Select from \"../../UI/Select/Select\";\r\n\r\nconst CountriesSelection = ({ data, setCountry }) => {\r\n  return (\r\n    <>\r\n      <Select handleOnChange={setCountry}>\r\n        {data.map((item, index) => (\r\n          <option key={item.Slug} value={item.Slug}>\r\n            {index + 1}. {item.Country}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountriesSelection;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({callback, label }) => {\r\n\r\n  return (\r\n    <button\r\n      className=\"button\"\r\n      onClick={() => {\r\n        if (!callback) return;\r\n        callback();\r\n      }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Card = ({\r\n  name,\r\n  date,\r\n  period,\r\n  active,\r\n  confirmed,\r\n  deaths,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Country: {name}</h2>\r\n      <p>Last statistics day: {date}</p>\r\n      <p>Statistical period : {period}</p>\r\n      <p>Amount of active : {active}</p>\r\n      <p>Amount confirmed : {confirmed}</p>\r\n      <p>Amount of deaths : {deaths}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Error.css\";\r\n\r\nconst Error = ({ label }) => {\r\n  return (\r\n    <h2 className={'warning'}>\r\n      {label}\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ label, value, callback }) => {\r\n  return (\r\n    <input\r\n      id={label}\r\n      value={value}\r\n      type='date'\r\n      onChange={(e) => {\r\n        if (!callback) return;\r\n        callback(e.currentTarget.value);\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default Input;\r\n","const Loader = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\" style={{ width: '100%', marginTop: '50px' }}>\r\n      <div className=\"spinner-border\" role=\"status\"></div>\r\n      <span >Loading...</span>\r\n    </div>\r\n  )\r\n}\r\nexport default Loader;","import React, { useState, useEffect } from \"react\";\r\nimport getFetch from \"../../api/getFetch\";\r\nimport CountriesSelection from \"./components/CountriesSelection\";\r\nimport { Loader } from '../UI'\r\n\r\nconst CountriesList = ({ setCountry }) => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const countries = await getFetch(\"countries\");\r\n      setItems(countries);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n\r\n    !items.length ? <Loader /> :\r\n    <header>\r\n      <nav>\r\n        <form id=\"form\">\r\n          <label form=\"countriesList\"></label>\r\n          <CountriesSelection data={items} setCountry={setCountry} />\r\n        </form>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport getFetch from \"../../api/getFetch\";\r\nimport { Button, Card, Loader, Error } from \"../UI\";\r\nimport { DAY, WEEK, MONTH } from \"../../utils/constants\";\r\nimport \"./CountryInfo.css\";\r\n\r\nconst CountryInfo = ({\r\n  country,\r\n  countryData,\r\n  setCountryData,\r\n  setPeriod,\r\n  setShowInputMenu,\r\n  setShowStatistics,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const request = await getFetch(`country/${country}`);\r\n      setCountryData(request);\r\n      setLoading(false);\r\n    };\r\n    if (!country.length) return;\r\n    setLoading(true);\r\n    fetchData();\r\n  }, [country]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  if (!countryData.length)\r\n    return (\r\n      <Error\r\n        label={\"No information about covid in this country\"}\r\n      />\r\n    );\r\n  const lastData = countryData[countryData.length - 1];\r\n  const name = lastData.Country;\r\n  const date = lastData.Date.slice(0, 10);\r\n  const periodDays = countryData.length;\r\n  const active = lastData.Active;\r\n  const confirmed = lastData.Confirmed;\r\n  const deaths = lastData.Deaths;\r\n\r\n  const setStandardPeriod = (period) => {\r\n    setPeriod(period);\r\n    setShowStatistics(true);\r\n  };\r\n  return (\r\n    <div className='countryInfo'>\r\n      <Card\r\n        name={name}\r\n        date={date}\r\n        period={periodDays}\r\n        active={active}\r\n        confirmed={confirmed}\r\n        deaths={deaths}\r\n      />\r\n      <a href='#statisticsInfo'>\r\n        <Button\r\n          callback={() => setStandardPeriod(DAY)}\r\n          label={\"For last day\"}\r\n        />\r\n        <Button\r\n          callback={() => setStandardPeriod(WEEK)}\r\n          label={\"For last week\"}\r\n        />\r\n        <Button\r\n          callback={() => setStandardPeriod(MONTH)}\r\n          label={\"For last month\"}\r\n        />\r\n      </a>\r\n      <a href='#inputMenu'>\r\n        <Button\r\n          callback={() => setShowInputMenu(true)}\r\n          label={\"Input your period\"}\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n","import React from \"react\";\r\nimport { Card } from \"../UI\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport \"./Statistics.css\";\r\n\r\nconst Statistics = ({\r\n  period,\r\n  countryData,\r\n  setShowStatistics,\r\n}) => {\r\n  const { start_period, end_period } = period;\r\n\r\n  if (countryData.length) {\r\n    const calculate = (keyWord) => {\r\n      return Math.abs(\r\n        countryData[countryData.length - start_period - 1][\r\n          keyWord\r\n        ] -\r\n          countryData[countryData.length - end_period - 1][\r\n            keyWord\r\n          ]\r\n      );\r\n    };\r\n\r\n    const name = countryData[0].Country;\r\n    const periodDays = Math.abs(start_period - end_period);\r\n    const active = calculate(\"Active\");\r\n    const confirmed = calculate(\"Confirmed\");\r\n    const deaths = calculate(\"Deaths\");\r\n\r\n    return (\r\n      <div className='statisticsInfo' id='statisticsInfo'>\r\n        <Card\r\n          name={name}\r\n          period={periodDays}\r\n          active={active}\r\n          confirmed={confirmed}\r\n          deaths={deaths}\r\n        />\r\n        <Button\r\n          callback={() => setShowStatistics(false)}\r\n          label={\"Hidden Statistics\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Statistics;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Error, Input } from \"../UI\";\r\nimport handleDate from \"../../utils/handleDate\";\r\nimport {\r\n  INIT_WARNING_START,\r\n  INIT_WARNING_END,\r\n} from \"../../utils/constants\";\r\nimport \"./InputMenu.css\";\r\n\r\nconst InputMenu = ({\r\n  maxPeriod,\r\n  period,\r\n  setPeriod,\r\n  setShowInputMenu,\r\n  setShowStatistics,\r\n}) => {\r\n  const [inpStart, setInpStart] = useState(\"\");\r\n  const [inpEnd, setInpEnd] = useState(\"\");\r\n\r\n  const [warningStart, setWarningStart] = useState(\r\n    INIT_WARNING_START\r\n  );\r\n  const [warningEnd, setWarningEnd] = useState(\r\n    INIT_WARNING_END\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleDate(\r\n      inpStart,\r\n      inpEnd,\r\n      period,\r\n      setPeriod,\r\n      warningStart,\r\n      setWarningStart,\r\n      warningEnd,\r\n      setWarningEnd,\r\n      setShowStatistics\r\n    );\r\n  }, [inpStart, inpEnd]);\r\n\r\n  return (\r\n    <div className='inputMenu' id='inputMenu'>\r\n      <h3>\r\n        Period must bee limited max {maxPeriod} days ago to\r\n        yesterday\r\n      </h3>\r\n      <label name='start_period'>Enter periods start</label>\r\n      <Input\r\n        label={\"start_period\"}\r\n        value={inpStart}\r\n        callback={setInpStart}\r\n      />\r\n\r\n      <label name='end_period'>Enter periods end</label>\r\n      <Input\r\n        label={\"end_period\"}\r\n        value={inpEnd}\r\n        callback={setInpEnd}\r\n      />\r\n      <Button\r\n        label={\"Hidden input menu\"}\r\n        callback={() => setShowInputMenu(false)}\r\n      />\r\n      {warningStart.start && (\r\n        <Error label={warningStart.labelForStart} />\r\n      )}\r\n      {warningEnd.end && (\r\n        <Error label={warningEnd.labelForEnd} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default InputMenu;\r\n","export default function handleDate(\r\n  inpStart,\r\n  inpEnd,\r\n  period,\r\n  setPeriod,\r\n  warningStart,\r\n  setWarningStart,\r\n  warningEnd,\r\n  setWarningEnd,\r\n  setShowStatistics\r\n) {\r\n  const today = new Date();\r\n  let endNumb, startNumb, isErrorEnd, isErrorStart;\r\n\r\n  const transformInpDateToNumber = (inputDate) => {\r\n    const days = new Date(inputDate);\r\n    return Math.ceil((today - days) / 86400000);\r\n  };\r\n\r\n  const checkForError = (numbDays) => {\r\n    return numbDays < 1 || numbDays > period.length\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  const printOrHideError = (isError, label) => {\r\n    //error\r\n    if (isError) {\r\n      setShowStatistics(false);\r\n\r\n      switch (label) {\r\n        case \"start\":\r\n          setWarningStart({\r\n            ...warningStart,\r\n            start: true,\r\n          });\r\n          break;\r\n        case \"end\":\r\n          setWarningEnd({\r\n            ...warningEnd,\r\n            end: true,\r\n          });\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n    // no error\r\n    if (!isError) {\r\n      switch (label) {\r\n        case \"start\":\r\n          setWarningStart({\r\n            ...warningStart,\r\n            start: false,\r\n          });\r\n          break;\r\n        case \"end\":\r\n          setWarningEnd({\r\n            ...warningEnd,\r\n            end: false,\r\n          });\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (inpStart.length) {\r\n    startNumb = transformInpDateToNumber(inpStart);\r\n    isErrorStart = checkForError(startNumb);\r\n    printOrHideError(isErrorStart, \"start\");\r\n  }\r\n  if (inpEnd.length) {\r\n    endNumb = transformInpDateToNumber(inpEnd);\r\n    isErrorEnd = checkForError(endNumb);\r\n    printOrHideError(isErrorEnd, \"end\");\r\n  }\r\n\r\n  if (isErrorEnd === false && isErrorStart === false) {\r\n    setPeriod({\r\n      start_period: startNumb,\r\n      end_period: endNumb,\r\n    });\r\n    setShowStatistics(true);\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CountriesList from \"./CountriesList/CountriesList\";\r\nimport CountryInfo from \"./CountryInfo/CountryInfo\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport InputMenu from \"./InputMenu/InputMenu\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [country, setCountry] = useState('');\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [period, setPeriod] = useState({\r\n    start_period: 0,\r\n    end_period: 0,\r\n  });\r\n\r\n  const [showInputMenu, setShowInputMenu] = useState(false);\r\n  const [showStatistics, setShowStatistics] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <CountriesList setCountry={setCountry} />\r\n      <main className=\"content\">\r\n        {showInputMenu && <InputMenu\r\n\t\t\t\tmaxPeriod={countryData.length}\r\n        period={period}\r\n          setPeriod={setPeriod}\r\n          setShowInputMenu={setShowInputMenu}\r\n          setShowStatistics={setShowStatistics}\r\n        />}\r\n        {!!country.length &&\r\n          <CountryInfo\r\n          country={country}\r\n            countryData={countryData}\r\n            setCountryData={setCountryData}\r\n            setPeriod={setPeriod}\r\n            setShowInputMenu={setShowInputMenu}\r\n            setShowStatistics={setShowStatistics}\r\n\r\n          />}\r\n        {showStatistics && <Statistics\r\n          period={period}\r\n          countryData={countryData}\r\n          setShowStatistics={setShowStatistics}\r\n        />}\r\n      </main>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}